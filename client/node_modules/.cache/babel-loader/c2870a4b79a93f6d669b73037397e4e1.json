{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwest/Desktop/weatherapp/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherAPI = {\n  key: \"8bd04b4c4bc8f493a35b227dba34ae78\",\n  baseURL: \"http://api.weatherapi.com/v1\",\n  lat: 10,\n  lon: 10\n};\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState({\n    lat: 0,\n    lon: 0\n  }); //Get user location\n  //Get weather data\n  //Display users data based on location\n\n  navigator.geolocation.getCurrentPosition(position => {\n    const p = position.coords;\n    console.log(p.latitude, p.longitude);\n    setLocation({\n      lat: p.latitude,\n      lon: p.longitude\n    });\n  });\n  const userLocation = new Promise((resolve, reject) => {});\n  userLocation.then(getWeatherData());\n\n  async function getWeatherData() {\n    await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${location.lat}&lon=${location.lon}&appid=8bd04b4c4bc8f493a35b227dba34ae78`).then(response => response.json()).then(data => console.log(data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DXdBG2JlEMLmF9O4IosX92iG0Yo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerwest/Desktop/weatherapp/client/src/App.js"],"names":["React","useEffect","useState","weatherAPI","key","baseURL","lat","lon","App","location","setLocation","navigator","geolocation","getCurrentPosition","position","p","coords","console","log","latitude","longitude","userLocation","Promise","resolve","reject","then","getWeatherData","fetch","response","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAE,kCADY;AAEjBC,EAAAA,OAAO,EAAE,8BAFQ;AAGjBC,EAAAA,GAAG,EAAE,EAHY;AAIjBC,EAAAA,GAAG,EAAE;AAJY,CAAnB;;AAOA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCI,IAAAA,GAAG,EAAE,CADkC;AAEvCC,IAAAA,GAAG,EAAE;AAFkC,GAAD,CAAxC,CAFa,CAOb;AACA;AACA;;AACAI,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAa;AACpD,UAAMC,CAAC,GAACD,QAAQ,CAACE,MAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,QAAd,EAAuBJ,CAAC,CAACK,SAAzB;AACAV,IAAAA,WAAW,CAAC;AACVJ,MAAAA,GAAG,EAAES,CAAC,CAACI,QADG;AAEVZ,MAAAA,GAAG,EAAEQ,CAAC,CAACK;AAFG,KAAD,CAAX;AAID,GAPD;AASA,QAAMC,YAAY,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB,CAErD,CAFoB,CAArB;AAIAH,EAAAA,YAAY,CACTI,IADH,CACQC,cAAc,EADtB;;AAGA,iBAAeA,cAAf,GAA+B;AAC7B,UAAMC,KAAK,CAAE,wDAAuDlB,QAAQ,CAACH,GAAI,QAAOG,QAAQ,CAACF,GAAI,yCAA1F,CAAL,CACHkB,IADG,CACEG,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHJ,IAFG,CAEEK,IAAI,IAAIb,OAAO,CAACC,GAAR,CAAYY,IAAZ,CAFV,CAAN;AAGD;;AAED,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArCQtB,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nconst weatherAPI = {\n  key: \"8bd04b4c4bc8f493a35b227dba34ae78\",\n  baseURL: \"http://api.weatherapi.com/v1\",\n  lat: 10,\n  lon: 10\n}\n\nfunction App() {\n\n  const [location, setLocation] = useState({\n    lat: 0,\n    lon: 0\n  })\n\n  //Get user location\n  //Get weather data\n  //Display users data based on location\n  navigator.geolocation.getCurrentPosition((position)=> {\n    const p=position.coords;\n    console.log(p.latitude,p.longitude);\n    setLocation({\n      lat: p.latitude,\n      lon: p.longitude\n    })\n  })\n\n  const userLocation = new Promise((resolve, reject) => {\n\n  })\n\n  userLocation\n    .then(getWeatherData());\n\n  async function getWeatherData(){\n    await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${location.lat}&lon=${location.lon}&appid=8bd04b4c4bc8f493a35b227dba34ae78`)\n      .then(response => response.json())\n      .then(data => console.log(data));\n  }\n\n  return (\n    <div>\n      <h1>Weather app</h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}