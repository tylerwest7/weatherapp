{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwest/Desktop/weatherapp/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport moment from 'moment';\nimport '../src/App.scss';\nimport lottie from 'lottie-web';\nimport { useForm, useWatch } from 'react-hook-form';\nimport PlaceholderCards from './Components/PlaceholderCards';\nimport Lottie from 'lottie-web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _userLocation$daily;\n\n  const apiKey = \"8bd04b4c4bc8f493a35b227dba34ae78\";\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [userLocation, setUserLocation] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [days, setDays] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [customLocation, setCustomLocation] = useState({\n    customLatitude: null,\n    customLongitude: null\n  });\n  const {\n    register,\n    watch,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => getCustomLocation(data);\n\n  const container = useRef(null);\n\n  const loaderAnim = () => {\n    lottie.loadAnimation({\n      container: container.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: require('../src/svg/loader.json')\n    });\n  }; //Check for location permissions\n\n\n  const checkPermissions = () => {\n    navigator.permissions.query({\n      name: 'geolocation'\n    }).then(function (result) {\n      // Will return ['granted', 'prompt', 'denied']\n      console.log(result.state);\n\n      if (result.state === 'granted') {\n        getLocation();\n      } else {\n        console.log('Enable location to use current location');\n        setLoading(false);\n      }\n    });\n  }; //State changed\n\n\n  useEffect(() => {\n    checkPermissions();\n    setLoading(true);\n    loaderAnim();\n  }, []); //Get location\n\n  const getLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(position => {\n      const currentLocation = position.coords;\n      console.log(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`);\n      getWeather(currentLocation);\n    });\n  }; //Get custom location\n\n\n  const getCustomLocation = async data => {\n    console.log(data);\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.inputLatitude}&lon=${data.inputLongitude}&units=imperial&appid=${apiKey}`).then(response => response.json()).then(data => {\n      //User location\n      setUserLocation(data);\n      const weatherData = data.daily;\n      setWeather(weatherData); //Set days\n\n      let newDays = [];\n      data.daily.map(day => {\n        let dayInt = new Date(day.dt * 1000).toDateString();\n        newDays.push(dayInt);\n      }); //Loading set to false\n\n      setLoading(false);\n      setDays(newDays);\n    });\n  }; //Get weather\n\n\n  const getWeather = async currentLocation => {\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`).then(response => response.json()).then(data => {\n      //User location\n      setUserLocation(data); //Set coordinates\n\n      setLatitude(currentLocation.latitude);\n      setlongitude(currentLocation.longitude);\n      const weatherData = data.daily;\n      setWeather(weatherData); //Set days\n\n      let newDays = [];\n      data.daily.map(day => {\n        let dayInt = new Date(day.dt * 1000).toDateString();\n        newDays.push(dayInt);\n      }); //Loading set to false\n\n      setLoading(false);\n      setDays(newDays);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"weather-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loader\",\n        ref: container,\n        style: {\n          display: loading ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weather-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Weather app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getLocation(),\n          children: \"Use current location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('inputLatitude', {\n              required: true\n            }),\n            placeholder: \"Latitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('inputLongitude', {\n              required: true\n            }),\n            placeholder: \"longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Search location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            opacity: 0\n          },\n          children: \"ASDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userLocation.timezone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(PlaceholderCards, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"day-card-container\",\n        children: (_userLocation$daily = userLocation.daily) === null || _userLocation$daily === void 0 ? void 0 : _userLocation$daily.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"day-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: moment.unix(day.dt).format(\"dddd MM/DD\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: day.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: `High of ${day.temp.max}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: `Low of ${day.temp.min}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u1SOmWqwVu+4oKRX2xE5sWVClwI=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerwest/Desktop/weatherapp/client/src/App.js"],"names":["React","useEffect","useRef","useState","moment","lottie","useForm","useWatch","PlaceholderCards","Lottie","App","apiKey","latitude","setLatitude","longitude","setlongitude","userLocation","setUserLocation","weather","setWeather","days","setDays","loading","setLoading","customLocation","setCustomLocation","customLatitude","customLongitude","register","watch","handleSubmit","formState","errors","onSubmit","data","getCustomLocation","container","loaderAnim","loadAnimation","current","renderer","loop","autoplay","animationData","require","checkPermissions","navigator","permissions","query","name","then","result","console","log","state","getLocation","geolocation","getCurrentPosition","position","currentLocation","coords","getWeather","fetch","inputLatitude","inputLongitude","response","json","weatherData","daily","newDays","map","day","dayInt","Date","dt","toDateString","push","display","required","opacity","timezone","index","unix","format","main","temp","max","min"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport moment from 'moment';\nimport '../src/App.scss';\nimport lottie from 'lottie-web';\nimport { useForm, useWatch } from 'react-hook-form';\nimport PlaceholderCards from './Components/PlaceholderCards';\nimport Lottie from 'lottie-web';\n\n\nfunction App() {\n\n  const apiKey = \"8bd04b4c4bc8f493a35b227dba34ae78\";\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [userLocation, setUserLocation] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [days, setDays] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [customLocation, setCustomLocation] = useState({\n    customLatitude: null,\n    customLongitude: null\n  })\n\n  const {register,watch,handleSubmit,formState: { errors },} = useForm();\n  const onSubmit = (data) => getCustomLocation(data);\n\n  const container = useRef(null);\n\n  const loaderAnim = () => {\n    lottie.loadAnimation({\n      container: container.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: require('../src/svg/loader.json')\n    })\n  }\n\n  //Check for location permissions\n  const checkPermissions = () => {\n    navigator.permissions.query({name:'geolocation'}).then(function(result) {\n      // Will return ['granted', 'prompt', 'denied']\n      console.log(result.state);\n      if(result.state === 'granted'){\n        getLocation();\n      }else{\n        console.log('Enable location to use current location');\n        setLoading(false);\n      }\n    });\n  }\n\n\n  //State changed\n  useEffect(() => {\n    checkPermissions();\n    setLoading(true);\n    loaderAnim();\n  },[])\n\n //Get location\n const getLocation = async () => {\n  await navigator.geolocation.getCurrentPosition((position)=> {\n    const currentLocation = position.coords;\n    console.log(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`);\n\n    getWeather(currentLocation);\n  })\n }\n\n  //Get custom location\n  const getCustomLocation = async (data) => {\n    console.log(data);\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.inputLatitude}&lon=${data.inputLongitude}&units=imperial&appid=${apiKey}`)\n      .then(response => response.json())\n      .then((data) => {\n\n        //User location\n        setUserLocation(data);\n\n        const weatherData = data.daily;\n        setWeather(weatherData);\n\n        //Set days\n        let newDays = [];\n        data.daily.map((day) => {\n          let dayInt = new Date(day.dt*1000).toDateString();\n          newDays.push(dayInt);\n        })\n\n        //Loading set to false\n        setLoading(false);\n\n        setDays(newDays);\n      })\n   }\n\n\n  //Get weather\n  const getWeather = async (currentLocation) => {\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`)\n      .then(response => response.json())\n      .then((data) => {\n\n        //User location\n        setUserLocation(data);\n\n        //Set coordinates\n        setLatitude(currentLocation.latitude);\n        setlongitude(currentLocation.longitude);\n\n        const weatherData = data.daily;\n        setWeather(weatherData);\n\n        //Set days\n        let newDays = [];\n        data.daily.map((day) => {\n          let dayInt = new Date(day.dt*1000).toDateString();\n          newDays.push(dayInt);\n        })\n\n        //Loading set to false\n        setLoading(false);\n\n        setDays(newDays);\n      })\n    }\n\n  return (\n    <div id='weather-container'>\n      <div id='weather'>\n        <div id='loader' ref={container} style={{display: loading ? 'block' : 'none' }} ></div>\n        <div id='weather-form'>\n          <h1>Weather app</h1>\n          <button onClick={() => getLocation()}>Use current location</button>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input {...register('inputLatitude', {required: true})} placeholder='Latitude'></input>\n            <input {...register('inputLongitude', {required: true})} placeholder='longitude'></input>\n            <button>Search location</button>\n          </form>\n          {loading ? <h2 style={{ opacity: 0 }}>ASDF</h2> : <h2>{userLocation.timezone}</h2>}\n        </div>\n        {loading ? <PlaceholderCards/> :\n        <div id='day-card-container'>{userLocation.daily?.map((day,index) => (\n          <div id='day-card' key={index}>\n              <h2>{moment.unix(day.dt).format(\"dddd MM/DD\")}</h2>\n              <br/>\n              <h2>{day.weather[0].main}</h2>\n              <br/>\n              <h4>{`High of ${day.temp.max}`}</h4>\n               <br/>\n              <h4>{`Low of ${day.temp.min}`}</h4>\n            </div>\n        ))}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}