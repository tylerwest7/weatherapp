{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwest/Desktop/weatherapp/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [dailyWeather, setDailyWeather] = useState([]);\n  const [days, setDays] = useState([]); //State changed\n\n  useEffect(() => {\n    getLocation();\n  }, []); //Get location\n\n  const getLocation = async () => {\n    await navigator.geolocation.getCurrentPosition(position => {\n      const x = position.coords;\n      setLatitude(x.latitude);\n      setlongitude(x.longitude);\n      getWeather(x);\n    });\n  }; //Get weather\n\n\n  const getWeather = async x => {\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${x.latitude}&lon=${x.longitude}&appid=8bd04b4c4bc8f493a35b227dba34ae78`).then(response => response.json()).then(data => {\n      console.log(data); //Set coordinates\n\n      setLatitude(data.latitude);\n      setlongitude(data.longitude); //Set daily weather\n\n      const newWeather = data.daily;\n      setDailyWeather(newWeather);\n      console.log(dailyWeather); //Set days\n\n      const newDays = new Date(data.daily.dt * 1000).toDateString;\n      console.log(newDays);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: dailyWeather.timezone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), dailyWeather.map(day => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: day.dt * 1000\n    }, day.dt, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lqZh1QWwtNOsXO61xuJZsTNOvSU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerwest/Desktop/weatherapp/client/src/App.js"],"names":["React","useEffect","useState","App","latitude","setLatitude","longitude","setlongitude","dailyWeather","setDailyWeather","days","setDays","getLocation","navigator","geolocation","getCurrentPosition","position","x","coords","getWeather","fetch","then","response","json","data","console","log","newWeather","daily","newDays","Date","dt","toDateString","timezone","map","day"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CALa,CAOX;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW;AACZ,GAFQ,EAEP,EAFO,CAAT,CARW,CAYd;;AACA,QAAMA,WAAW,GAAG,YAAY;AAC/B,UAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAa;AAC1D,YAAMC,CAAC,GAAGD,QAAQ,CAACE,MAAnB;AACAb,MAAAA,WAAW,CAACY,CAAC,CAACb,QAAH,CAAX;AACAG,MAAAA,YAAY,CAACU,CAAC,CAACX,SAAH,CAAZ;AACAa,MAAAA,UAAU,CAACF,CAAD,CAAV;AACD,KALK,CAAN;AAMA,GAPD,CAbc,CAsBb;;;AACA,QAAME,UAAU,GAAG,MAAOF,CAAP,IAAa;AAC9B,UAAMG,KAAK,CAAE,uDAAsDH,CAAC,CAACb,QAAS,QAAOa,CAAC,CAACX,SAAU,yCAAtF,CAAL,CACHe,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEGG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADc,CAGd;;AACAnB,MAAAA,WAAW,CAACmB,IAAI,CAACpB,QAAN,CAAX;AACAG,MAAAA,YAAY,CAACiB,IAAI,CAAClB,SAAN,CAAZ,CALc,CAOd;;AACA,YAAMqB,UAAU,GAAGH,IAAI,CAACI,KAAxB;AACAnB,MAAAA,eAAe,CAACkB,UAAD,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAZ,EAVc,CAYd;;AACA,YAAMqB,OAAO,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACI,KAAL,CAAWG,EAAX,GAAc,IAAvB,EAA6BC,YAA7C;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACD,KAjBG,CAAN;AAkBD,GAnBD;;AAsBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKrB,YAAY,CAACyB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGzB,YAAY,CAAC0B,GAAb,CAAkBC,GAAD,iBACd;AAAA,gBAAkBA,GAAG,CAACJ,EAAJ,GAAO;AAAzB,OAASI,GAAG,CAACJ,EAAb;AAAA;AAAA;AAAA;AAAA,YADH,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAtDQ5B,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [dailyWeather, setDailyWeather] = useState([]);\n  const [days, setDays] = useState([]);\n\n    //State changed\n    useEffect(() => {\n      getLocation();\n    },[])\n\n //Get location\n const getLocation = async () => {\n  await navigator.geolocation.getCurrentPosition((position)=> {\n    const x = position.coords;\n    setLatitude(x.latitude);\n    setlongitude(x.longitude);\n    getWeather(x);\n  })\n }\n\n  //Get weather\n  const getWeather = async (x) => {\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${x.latitude}&lon=${x.longitude}&appid=8bd04b4c4bc8f493a35b227dba34ae78`)\n      .then(response => response.json())\n      .then((data) => {\n        console.log(data);\n\n        //Set coordinates\n        setLatitude(data.latitude);\n        setlongitude(data.longitude);\n\n        //Set daily weather\n        const newWeather = data.daily;\n        setDailyWeather(newWeather);\n        console.log(dailyWeather);\n\n        //Set days\n        const newDays = new Date(data.daily.dt*1000).toDateString;\n        console.log(newDays);\n      })\n  }\n\n\n  return (\n    <div>\n      <h1>Weather app</h1>\n      <h2>{dailyWeather.timezone}</h2>\n      {dailyWeather.map((day) => (\n          <h1 key={day.dt}>{day.dt*1000}</h1>\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}