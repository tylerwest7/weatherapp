{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwest/Desktop/weatherapp/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport moment from 'moment';\nimport '../src/App.scss';\nimport lottie from 'lottie-web';\nimport { useForm, useWatch } from 'react-hook-form';\nimport PlaceholderCards from './Components/PlaceholderCards';\nimport CardDetail from './Components/CardDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _userLocation$daily;\n\n  //Hello world\n  const apiKey = \"8bd04b4c4bc8f493a35b227dba34ae78\";\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [userLocation, setUserLocation] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [days, setDays] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [customLocation, setCustomLocation] = useState({\n    customLatitude: null,\n    customLongitude: null\n  });\n  const [cardDetail, setCardDetail] = useState([]);\n  const [cardDetailVisible, setCardDetailVisible] = useState(false);\n  const [usingCurrentLocation, setUsingCurrentLocation] = useState(null);\n  const [errorState, setErrorState] = useState(true);\n  const [animationDestroyed, setAnimationDestroyed] = useState(null);\n  const [error, setError] = useState(null); //Weather animations\n\n  const sunny = require('../src/svg/sunny.json');\n\n  const snow = require('../src/svg/rainy.json');\n\n  const cloudy = require('../src/svg/cloudy.json');\n\n  const rainy = require('../src/svg/rainy.json'); //Submit custom data\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const inputData = new FormData(e.target);\n    const iLatitude = inputData.get('latitude');\n    const iLongitude = inputData.get('longitude');\n    const data = {\n      inputLatitude: iLatitude,\n      inputLongitude: iLongitude\n    };\n    getCustomLocation(data);\n  };\n\n  const container = useRef(null);\n\n  const loaderAnim = () => {\n    lottie.loadAnimation({\n      container: container.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: require('../src/svg/loader.json')\n    });\n  };\n\n  const sunnyAnim = (card, weather) => {\n    lottie.loadAnimation({\n      container: card,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: weather\n    });\n    console.log('loading sunny anim');\n  }; //State changed\n\n\n  useEffect(() => {\n    checkPermissions();\n    setLoading(true);\n    loaderAnim();\n  }, []); ////////////////\n\n  function getPosition() {\n    // Simple wrapper\n    return new Promise((res, rej) => {\n      navigator.geolocation.getCurrentPosition(res, rej);\n    });\n  }\n\n  function main() {\n    getPosition().then(console.log('Hello world heres some coordinates')); // wait for getPosition to complete\n  }\n\n  main(); /////////////////////////\n  //Check for location permissions\n\n  const checkPermissions = () => {\n    //Check if browser is safari or chrome\n    var isSafari = /constructor/i.test(window.HTMLElement) || function (p) {\n      return p.toString() === \"[object SafariRemoteNotification]\";\n    }(!window['safari'] || typeof safari !== 'undefined' && window['safari'].pushNotification);\n\n    if (isSafari) {\n      console.log('Browser is safari'); //If access is granted\n      //getLocation();\n    } else {\n      console.log('Browser is chrome');\n      navigator.permissions.query({\n        name: 'geolocation'\n      }).then(function (result) {\n        // Will return ['granted', 'prompt', 'denied']\n        console.log(result.state);\n\n        if (result.state === 'granted') {\n          getLocation();\n        } else {\n          console.log('Enable location to use current location');\n          const data = {\n            latitude: 37.7749,\n            longitude: 122.4194\n          };\n          getWeather(data);\n        }\n      });\n    }\n  }; //Get location\n\n\n  const getLocation = async () => {\n    //Safari check locations\n    navigator.geolocation.getCurrentPosition(showMap);\n\n    function showMap(position) {\n      console.log('Hello');\n    } /////////\n\n\n    setLoading(true);\n\n    if (animationDestroyed) {\n      loaderAnim();\n    } //Get current location\n\n\n    await navigator.geolocation.getCurrentPosition(position => {\n      setLoading(false);\n      const currentLocation = position.coords;\n      console.log(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`);\n      getWeather(currentLocation);\n      setUsingCurrentLocation(true);\n    });\n  }; //Get custom location\n\n\n  const getCustomLocation = async data => {\n    console.log(data);\n    setLoading(true);\n\n    if (animationDestroyed) {\n      loaderAnim();\n    }\n\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.inputLatitude}&lon=${data.inputLongitude}&units=imperial&appid=${apiKey}`).then(response => response.json()).then(data => {\n      setLoading(false);\n      lottie.destroy();\n      setAnimationDestroyed(true);\n      setUsingCurrentLocation(false);\n      console.log(data); //User location\n\n      setUserLocation(data);\n      const weatherData = data.daily;\n      setWeather(weatherData); //Set days\n\n      let newDays = [];\n      data.daily.map(day => {\n        let dayInt = new Date(day.dt * 1000).toDateString();\n        newDays.push(dayInt);\n      }); //Loading set to false\n      //setLoading(false);\n\n      setDays(newDays); //Add emoji to each day\n\n      data.daily.map((day, index) => {\n        const id = day.weather[0].id; //Assign\n\n        const card = document.getElementById(`card-image-${index}`); //Filter weather and pass animation\n\n        if (id >= 200 && id < 300) {\n          //Thunderstorm\n          const weather = rainy;\n          sunnyAnim(card, weather);\n        } else if (id >= 300 && id < 400) {\n          //Drizzle\n          const weather = rainy;\n          sunnyAnim(card, weather);\n        } else if (id >= 300 && id < 400) {\n          //Rain\n          const weather = rainy;\n          sunnyAnim(card, weather);\n        } else if (id >= 500 && id < 600) {\n          //Snow\n          const weather = snow;\n          sunnyAnim(card, weather);\n        } else if (id >= 600 && id < 700) {\n          //Atmosphere\n          const weather = cloudy;\n          sunnyAnim(card, weather);\n        } else if (id === 800) {\n          //Clear\n          const weather = sunny;\n          sunnyAnim(card, weather);\n        } else if (id > 800) {\n          //Clouds\n          const weather = cloudy;\n          sunnyAnim(card, weather);\n        }\n      });\n    }).catch(function (err) {\n      setError(true);\n      console.log(`${err} sorry cannot display data`);\n      setLoading(true);\n      setErrorState(false);\n    });\n  }; //Get weather\n\n\n  const getWeather = async currentLocation => {\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`).then(response => response.json()).then(data => {\n      lottie.destroy();\n      setAnimationDestroyed(true);\n      console.log(data);\n      setUsingCurrentLocation(true); //User location\n\n      setUserLocation(data); //Set coordinates\n\n      setLatitude(currentLocation.latitude);\n      setlongitude(currentLocation.longitude);\n      const weatherData = data.daily;\n      setWeather(weatherData); //Set days\n\n      let newDays = [];\n      data.daily.map(day => {\n        let dayInt = new Date(day.dt * 1000).toDateString();\n        newDays.push(dayInt);\n      });\n      setDays(newDays); //Loading set to false\n\n      setLoading(false); //Add emoji to each day\n\n      data.daily.map((day, index) => {\n        const id = day.weather[0].id; //Assign\n\n        const card = document.getElementById(`card-image-${index}`); //Filter weather and pass animation\n\n        if (id >= 200 && id < 300) {\n          //Thunderstorm\n          const weather = sunny;\n          sunnyAnim(card, weather);\n        } else if (id >= 300 && id < 400) {\n          //Drizzle\n          const weather = sunny;\n          sunnyAnim(card, weather);\n        } else if (id >= 300 && id < 400) {\n          //Rain\n          const weather = sunny;\n          sunnyAnim(card, weather);\n        } else if (id >= 500 && id < 600) {\n          //Snow\n          const weather = snow;\n          sunnyAnim(card, weather);\n        } else if (id >= 600 && id < 700) {\n          //Atmosphere\n          const weather = cloudy;\n          sunnyAnim(card, weather);\n        } else if (id === 800) {\n          //Clear\n          const weather = sunny;\n          sunnyAnim(card, weather);\n        } else if (id > 800) {\n          //Clouds\n          const weather = cloudy;\n          sunnyAnim(card, weather);\n        }\n      });\n    }).then(() => {\n      console.log('Weather data displayed');\n    }).catch(function (err) {\n      setError(true);\n      console.log(`${err} sorry cannot display data`);\n      setLoading(true);\n      setErrorState(false);\n    });\n  }; //Card\n\n\n  function cardHandler(e, day) {\n    e.preventDefault();\n    console.log(day);\n    setCardDetail(day);\n    setCardDetailVisible(true);\n  }\n\n  function handleCardClose() {\n    console.log('Closing card');\n    setCardDetailVisible(false);\n  }\n\n  function arrowLeftHandler() {\n    console.log(\"Left tapped\");\n    const container = document.getElementById(\"day-card-container\");\n    container.scrollLeft -= container.scrollWidth;\n  }\n\n  function arrowRightHandler() {\n    console.log(\"Right tapped\");\n    const container = document.getElementById(\"day-card-container\");\n    container.scrollLeft = container.scrollWidth;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"footer\",\n      children: [\"Made with love from the help of Lottie, OpenWeather API, and React - \", /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"site-link\",\n        href: \"https://www.tylerwest.co/\",\n        children: \"Tylerwest.co\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 92\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardDetail, {\n      handleCardClose: () => handleCardClose,\n      cardDetailVisible: cardDetailVisible,\n      dailyDetails: cardDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"weather-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"weather\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"loader\",\n          ref: container,\n          className: loading ? \"loader-state\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"weather-form\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Predicting weather for...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userLocation.timezone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 59\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"input\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => onSubmit(e),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"latitude\",\n                type: \"number\",\n                step: \"any\",\n                required: \"required\",\n                id: \"inputField\",\n                placeholder: \"Latitude\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"longitude\",\n                type: \"number\",\n                step: \"any\",\n                id: \"inputField\",\n                placeholder: \"longitude\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Search location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 15\n              }, this), usingCurrentLocation ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => getLocation(),\n                children: userLocation.timezone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 39\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => getLocation(),\n                children: \"Use current location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 126\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }, this), loading ? /*#__PURE__*/_jsxDEV(PlaceholderCards, {\n          errorState: errorState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"day-card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => arrowLeftHandler(),\n            id: \"arrow-left\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"60\",\n              height: \"60\",\n              viewBox: \"0 0 60 60\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"30\",\n                cy: \"30\",\n                r: \"29.5\",\n                fill: \"#2C2C2C\",\n                stroke: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 106\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M26.6066 19L37.2132 29.6066L26.6066 40.2132\",\n                stroke: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 170\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"arrow-right\",\n            onClick: () => arrowRightHandler(),\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"60\",\n              height: \"60\",\n              viewBox: \"0 0 60 60\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"30\",\n                cy: \"30\",\n                r: \"29.5\",\n                fill: \"#2C2C2C\",\n                stroke: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 106\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M26.6066 19L37.2132 29.6066L26.6066 40.2132\",\n                stroke: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 170\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 11\n          }, this), (_userLocation$daily = userLocation.daily) === null || _userLocation$daily === void 0 ? void 0 : _userLocation$daily.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"day-card\",\n            onClick: e => cardHandler(e, day),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              id: `card-image-${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"weather-text\",\n              children: day.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"day-text\",\n              children: moment.unix(day.dt).format(\"dddd MM/DD\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              id: \"weather-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-sub\",\n                  children: \"Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-header\",\n                  children: day.temp.day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-sub\",\n                  children: \"Morning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-header\",\n                  children: day.temp.morn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-sub\",\n                  children: \"Evening\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-header\",\n                  children: day.temp.eve\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-sub\",\n                  children: \"Night\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  id: \"list-header\",\n                  children: day.temp.night\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xzql8bx9Polueev/jXV17AEJz8o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerwest/Desktop/weatherapp/client/src/App.js"],"names":["React","useEffect","useRef","useState","moment","lottie","useForm","useWatch","PlaceholderCards","CardDetail","App","apiKey","latitude","setLatitude","longitude","setlongitude","userLocation","setUserLocation","weather","setWeather","days","setDays","loading","setLoading","customLocation","setCustomLocation","customLatitude","customLongitude","cardDetail","setCardDetail","cardDetailVisible","setCardDetailVisible","usingCurrentLocation","setUsingCurrentLocation","errorState","setErrorState","animationDestroyed","setAnimationDestroyed","error","setError","sunny","require","snow","cloudy","rainy","onSubmit","e","preventDefault","inputData","FormData","target","iLatitude","get","iLongitude","data","inputLatitude","inputLongitude","getCustomLocation","container","loaderAnim","loadAnimation","current","renderer","loop","autoplay","animationData","sunnyAnim","card","console","log","checkPermissions","getPosition","Promise","res","rej","navigator","geolocation","getCurrentPosition","main","then","isSafari","test","window","HTMLElement","p","toString","safari","pushNotification","permissions","query","name","result","state","getLocation","getWeather","showMap","position","currentLocation","coords","fetch","response","json","destroy","weatherData","daily","newDays","map","day","dayInt","Date","dt","toDateString","push","index","id","document","getElementById","catch","err","cardHandler","handleCardClose","arrowLeftHandler","scrollLeft","scrollWidth","arrowRightHandler","timezone","unix","format","temp","morn","eve","night"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport moment from 'moment';\nimport '../src/App.scss';\nimport lottie from 'lottie-web';\nimport { useForm, useWatch } from 'react-hook-form';\nimport PlaceholderCards from './Components/PlaceholderCards';\nimport CardDetail from './Components/CardDetail';\n\nfunction App() {\n\n  //Hello world\n  \n  const apiKey = \"8bd04b4c4bc8f493a35b227dba34ae78\";\n\n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setlongitude] = useState(0);\n  const [userLocation, setUserLocation] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [days, setDays] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [customLocation, setCustomLocation] = useState({\n    customLatitude: null,\n    customLongitude: null\n  })\n  const [cardDetail, setCardDetail] = useState([]);\n  const [cardDetailVisible, setCardDetailVisible] = useState(false);\n  const [usingCurrentLocation, setUsingCurrentLocation] =useState(null);\n  const [errorState, setErrorState] = useState(true);\n  const [animationDestroyed, setAnimationDestroyed] = useState(null);\n\n  const [error, setError] = useState(null);\n\n  //Weather animations\n  const sunny = require('../src/svg/sunny.json');\n  const snow = require('../src/svg/rainy.json');\n  const cloudy = require('../src/svg/cloudy.json');\n  const rainy = require('../src/svg/rainy.json');\n\n  //Submit custom data\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const inputData = new FormData(e.target);\n    const iLatitude = inputData.get('latitude')\n    const iLongitude = inputData.get('longitude');\n\n    const data = {\n      inputLatitude: iLatitude,\n      inputLongitude: iLongitude\n    }\n\n    getCustomLocation(data);\n  }\n\n  const container = useRef(null);\n\n  const loaderAnim = () => {\n    lottie.loadAnimation({\n      container: container.current,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: require('../src/svg/loader.json')\n    })\n  }\n\n  const sunnyAnim = (card,weather) => {\n    lottie.loadAnimation({\n      container: card,\n      renderer: 'svg',\n      loop: true,\n      autoplay: true,\n      animationData: weather\n    })\n    console.log('loading sunny anim');\n  }\n\n\n    //State changed\n    useEffect(() => {\n      checkPermissions();\n      setLoading(true);\n      loaderAnim();\n    },[])\n\n////////////////\n    function getPosition() {\n      // Simple wrapper\n      return new Promise((res, rej) => {\n          navigator.geolocation.getCurrentPosition(res, rej);\n      });\n    }\n\n    function main() {\n      getPosition().then(console.log('Hello world heres some coordinates')); // wait for getPosition to complete\n    }\n\n    main();\n/////////////////////////\n\n  //Check for location permissions\n  const checkPermissions = () => {\n\n    //Check if browser is safari or chrome\n    var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && window['safari'].pushNotification));\n\n    if(isSafari){\n      console.log('Browser is safari');\n\n      //If access is granted\n      //getLocation();\n\n\n    }else{\n      console.log('Browser is chrome');\n\n    navigator.permissions.query({name:'geolocation'}).then(function(result) {\n      // Will return ['granted', 'prompt', 'denied']\n      console.log(result.state);\n      if(result.state === 'granted'){\n        getLocation();\n      }else{\n        console.log('Enable location to use current location');\n        const data = {\n          latitude: 37.7749,\n          longitude: 122.4194\n        }\n        getWeather(data)\n      }\n    });\n  }\n  \n  }\n\n\n //Get location\n const getLocation = async () => {\n\n\n  //Safari check locations\n  navigator.geolocation.getCurrentPosition(showMap);\n\n  function showMap(position) {\n    console.log('Hello');\n  }\n  /////////\n\n  setLoading(true);\n  if(animationDestroyed){\n    loaderAnim();\n  }\n\n  //Get current location\n  await navigator.geolocation.getCurrentPosition((position)=> {\n    setLoading(false);\n    const currentLocation = position.coords;\n    console.log(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`);\n    getWeather(currentLocation);\n    setUsingCurrentLocation(true);\n  })\n\n }\n\n  //Get custom location\n  const getCustomLocation = async (data) => {\n    console.log(data);\n    setLoading(true);\n    if(animationDestroyed){\n      loaderAnim();\n    }\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${data.inputLatitude}&lon=${data.inputLongitude}&units=imperial&appid=${apiKey}`)\n      .then(response => response.json())\n      .then((data) => {\n        setLoading(false);\n\n        lottie.destroy();\n        setAnimationDestroyed(true);\n\n        setUsingCurrentLocation(false);\n\n        console.log(data);\n\n        //User location\n        setUserLocation(data);\n\n        const weatherData = data.daily;\n        setWeather(weatherData);\n\n        //Set days\n        let newDays = [];\n        data.daily.map((day) => {\n          let dayInt = new Date(day.dt*1000).toDateString();\n          newDays.push(dayInt);\n        })\n\n        //Loading set to false\n        //setLoading(false);\n\n        setDays(newDays);\n\n        //Add emoji to each day\n        data.daily.map((day, index) => {\n\n          const id = day.weather[0].id;\n\n          //Assign\n          const card = document.getElementById(`card-image-${index}`)\n\n          //Filter weather and pass animation\n          if(id >= 200 && id < 300){\n            //Thunderstorm\n            const weather = rainy;\n            sunnyAnim(card,weather);\n          }else if(id >= 300 && id < 400){\n            //Drizzle\n            const weather = rainy;\n            sunnyAnim(card,weather);\n          }else if(id >= 300 && id < 400){\n            //Rain\n            const weather = rainy;\n            sunnyAnim(card,weather);\n          }else if(id >= 500 && id < 600){\n            //Snow\n            const weather = snow;\n            sunnyAnim(card,weather);\n          }else if(id >= 600 && id < 700){\n            //Atmosphere\n            const weather = cloudy;\n            sunnyAnim(card,weather);\n          }else if(id === 800){\n            //Clear\n            const weather = sunny;\n            sunnyAnim(card,weather);\n          }else if(id > 800){\n            //Clouds\n            const weather = cloudy;\n            sunnyAnim(card,weather);\n          }\n        })\n        \n      })\n      .catch(function(err){\n        setError(true);\n        console.log(`${err} sorry cannot display data`);\n        setLoading(true);\n        setErrorState(false);\n      });\n   }\n\n\n  //Get weather\n  const getWeather = async (currentLocation) => {\n    await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${currentLocation.latitude}&lon=${currentLocation.longitude}&units=imperial&appid=${apiKey}`)\n      .then(response => response.json())\n      .then((data) => {\n        lottie.destroy();\n        setAnimationDestroyed(true);\n\n\n\n        console.log(data);\n\n        setUsingCurrentLocation(true);\n\n        //User location\n        setUserLocation(data);\n\n        //Set coordinates\n        setLatitude(currentLocation.latitude);\n        setlongitude(currentLocation.longitude);\n\n        const weatherData = data.daily;\n        setWeather(weatherData);\n\n        //Set days\n        let newDays = [];\n        data.daily.map((day) => {\n          let dayInt = new Date(day.dt*1000).toDateString();\n          newDays.push(dayInt);\n        })\n        setDays(newDays);\n\n        //Loading set to false\n        setLoading(false);\n\n        //Add emoji to each day\n        data.daily.map((day, index) => {\n\n          const id = day.weather[0].id;\n\n          //Assign\n          const card = document.getElementById(`card-image-${index}`)\n\n          //Filter weather and pass animation\n          if(id >= 200 && id < 300){\n            //Thunderstorm\n            const weather = sunny;\n            sunnyAnim(card,weather);\n          }else if(id >= 300 && id < 400){\n            //Drizzle\n            const weather = sunny;\n            sunnyAnim(card,weather);\n          }else if(id >= 300 && id < 400){\n            //Rain\n            const weather = sunny;\n            sunnyAnim(card,weather);\n          }else if(id >= 500 && id < 600){\n            //Snow\n            const weather = snow;\n            sunnyAnim(card,weather);\n          }else if(id >= 600 && id < 700){\n            //Atmosphere\n            const weather = cloudy;\n            sunnyAnim(card,weather);\n          }else if(id === 800){\n            //Clear\n            const weather = sunny;\n            sunnyAnim(card,weather);\n          }else if(id > 800){\n            //Clouds\n            const weather = cloudy;\n            sunnyAnim(card,weather);\n          }\n        })\n      })\n      .then(()=>{\n        console.log('Weather data displayed');\n      })\n      .catch(function(err){\n        setError(true);\n        console.log(`${err} sorry cannot display data`);\n        setLoading(true);\n        setErrorState(false);\n      });\n    }\n\n    //Card\n    function cardHandler(e, day) {\n      e.preventDefault();\n      console.log(day);\n      setCardDetail(day);\n      setCardDetailVisible(true);\n    }\n\n    function handleCardClose(){\n      console.log('Closing card');\n      setCardDetailVisible(false);\n    }\n\n    function arrowLeftHandler(){\n      console.log(\"Left tapped\");\n      const container = document.getElementById(\"day-card-container\");\n      container.scrollLeft -= container.scrollWidth;\n    }\n\n    function arrowRightHandler(){\n      console.log(\"Right tapped\");\n      const container = document.getElementById(\"day-card-container\");\n      container.scrollLeft = container.scrollWidth;\n    }\n\n  return (\n    <div id='page-container'>\n      <h1 id='footer'>Made with love from the help of Lottie, OpenWeather API, and React - <a id='site-link' href=\"https://www.tylerwest.co/\">Tylerwest.co</a></h1>\n      <CardDetail handleCardClose={() => handleCardClose} cardDetailVisible={cardDetailVisible} dailyDetails={cardDetail}/>\n      <div id='weather-container'>\n      <div id='weather'>\n        <div id='loader' ref={container} className={loading ? \"loader-state\" : \"\"} ></div>\n        <div id='weather-form'>\n          {loading ? <h1>Predicting weather for...</h1> : <h1>{userLocation.timezone}</h1>}\n          <div id='input'>\n            <form onSubmit={(e) => onSubmit(e)}>\n              <input name='latitude' type=\"number\" step=\"any\" required=\"required\" id='inputField' placeholder='Latitude'></input>\n              <input name='longitude' type=\"number\" step=\"any\" id='inputField' placeholder='longitude'></input>\n              <button>Search location</button>\n              {usingCurrentLocation ? <button type=\"button\" onClick={() => getLocation()}>{userLocation.timezone}</button> : <button type=\"button\" onClick={() => getLocation()}>Use current location</button>}\n            </form>\n          </div>\n        </div>\n        {loading ? <PlaceholderCards errorState={errorState}/> :\n        <div id='day-card-container'>\n          <div onClick={() => arrowLeftHandler()} id='arrow-left'>\n          <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"30\" cy=\"30\" r=\"29.5\" fill=\"#2C2C2C\" stroke=\"white\"/><path d=\"M26.6066 19L37.2132 29.6066L26.6066 40.2132\" stroke=\"white\"/></svg>\n          </div>\n          <div id='arrow-right' onClick={() => arrowRightHandler()}>\n          <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"30\" cy=\"30\" r=\"29.5\" fill=\"#2C2C2C\" stroke=\"white\"/><path d=\"M26.6066 19L37.2132 29.6066L26.6066 40.2132\" stroke=\"white\"/></svg>\n          </div>\n          {userLocation.daily?.map((day,index) => (\n          <div id='day-card' key={index} onClick={(e) => cardHandler(e, day)}>\n              <div className='card-image' id={`card-image-${index}`}></div>\n              <h3 id='weather-text'>{day.weather[0].main}</h3>\n              <h2 id='day-text'>{moment.unix(day.dt).format(\"dddd MM/DD\")}</h2>\n              <ul id='weather-list'>\n                <li>\n                  <h4 id='list-sub'>Day</h4>\n                  <h4 id='list-header'>{day.temp.day}</h4>\n                </li>\n                <li>\n                  <h4 id='list-sub'>Morning</h4>\n                  <h4 id='list-header'>{day.temp.morn}</h4>\n                </li>\n                <li>\n                  <h4 id='list-sub'>Evening</h4>\n                  <h4 id='list-header'>{day.temp.eve}</h4>\n                </li>\n                <li>\n                  <h4 id='list-sub'>Night</h4>\n                  <h4 id='list-header'>{day.temp.night}</h4>\n                </li>\n              </ul>\n            </div>\n        ))}</div>}\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}